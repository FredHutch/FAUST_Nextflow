% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/faust.R, R/zzz.R
\docType{package}
\name{faust}
\alias{faust}
\alias{faust-package}
\title{Full Annotation Using Shape-constrained Trees}
\usage{
faust(gatingSet, activeChannels, channelBounds = "", startingCellPop,
  experimentalUnit = "", imputationHierarchy = "", projectPath = ".",
  depthScoreThreshold = 0.01, selectionQuantile = 0.5,
  debugFlag = FALSE, threadNum = 1, seedValue = 123,
  numForestIter = 1, numScampIter = 1,
  nameOccuranceNum = ceiling((0.1 * length(gatingSet))),
  drawAnnotationHistograms = 1, supervisedList = NA,
  annotationsApproved = FALSE, densitySubSampleThreshold = 1e+09,
  densitySubSampleSize = 1e+09, densitySubSampleIterations = 1,
  archDescriptionList = list(targetArch = c("singleCPU")))
}
\arguments{
\item{gatingSet}{The \code{faust} function requires that experimental cytometry data you wish to analyze
is stored in a \code{GatingSet} data structure.
This data structure can be constructed available using the \code{flowWorkspace} Bioconductor package.}

\item{activeChannels}{A character vector, each entry of which is a marker name to be used in the \code{faust}
analysis. The markers listed in this parameter
must \strong{exactly} match the \code{desc} field of the \code{parameters} of the \code{flowFrames} in the \code{GatingSet. }FAUST` will not run if they do not match exactly.}

\item{channelBounds}{A 2 by \code{length(activeChannels)} numeric matriix,
with \code{colnames(channelBounds) <- activeChannels} and \code{rownames(channelBounds) <- c("Low","High")}.
Expression values in a channel less than or equal to the value in the "Low"
row are treated as low, by default, and not actively considered when \code{FAUST} processes the data.
Expression values in a channel greater than or equal to the value in the "High"
row are treated as high, by default, and not actively considered when \code{FAUST} processes the data.
If this parameter is not set by the user, it will be set empirically by heuristic, and printed to log.}

\item{startingCellPop}{A character vector specifying the node from the manual gating strategy attached to
the \code{gatingSet} to use for \code{faust} analysis. The node in the manual gating strategy is, at minimum,
asusmed by \code{faust} to have pre-gated debris and dead cells. For example, the node might identify live lymphocytes
in each sample.}

\item{experimentalUnit}{A character vector specifying the experimental unit of analysis of samples contained
in the gating set. If left as its default value "", the "name" column in \code{pData(gatingSet)} will be used as
the experimental unit, leading to \code{FAUST} analyzing each sample independently. If modified by the user, the
value must match one of the strings in \code{colnames(pData(gatingSet))}; the corresponding column of the
data frame \code{pData(gatingSet)} will be used to concatenate individual samples into experimental units for analysis
by \code{FAUST}.}

\item{imputationHierarchy}{A character vector specifying the imputation hierarchy for annotation boundaries computed
by FAUST. If left as its default value "", \code{FAUST} will impose no hierarchy on the data.
If modified by the user, the value must match one of the strings in \code{colnames(pData(gatingSet))};
the corresponding column of the data frame \code{pData(gatingSet)} will be used to impose the impose the imputation
hierarchy: for each selected marker, experimental units that do not empirical support annotation bondaries for a marker
will first attempt to use other experimental units with the same \code{imputationHierarchy} coding to impute boundaries.
If this is not possible, annotation boundaries will be imputed usining boundaries from all experimental units.}

\item{projectPath}{An absolute path on your system that locates all intermediate data produced by faust.
At the location specified by the projectPath, \code{faust} creates a directory called \code{faustData}, and subdirectories
that contain intermediate data generated by the analysis. The final output of \code{faust}, an annotated matrix of
counts, is produced at \code{projectPath/faustData/faustCountMatrix.rds}, and can be loaded into R using the \code{readRDS}
function. Currently, \code{faust} only supports Mac OSX and Linux file systems.}

\item{depthScoreThreshold}{A numeric value between 0 and 1 used for marker selection.
\code{faust} uses this parameter in conjunction with the \code{selectionQuantile} parameter to determine which
markers to use for discovery and annotation.
\code{faust} automatically produces a plot "projectPath/faustData/plotData/scoreLines.pdf"
that can be used to help set this threshold value for an experiment.}

\item{selectionQuantile}{A numeric value between 0 and 1 used for marker selection.
Depth scores are computed for all experimental units in the experiment.
FAUST computes the empirical selectionQuantile  across each channel:
\code{quantile(channelDepthScores,probs=selectionQuantile)}.
The empirical quantile is then compared to the depthScoreThreshold for each marker.
All markers with empirical quantile above the depthScoreThreshold are used by \code{faust} to discover
and annotate cell subsets in the experiment.}

\item{debugFlag}{Boolean value. Set to TRUE to print method status information to the console or a log file.}

\item{threadNum}{Integer value. Many components of the FAUST method support multi-threading on a single CPU.
Set this parameter to the number of threads you wish to use.}

\item{seedValue}{Integer value that determines the random seed. Used for reproducibility.}

\item{numForestIter}{The number of annotation forest grown for each experimental unit. Set to 1 by default.}

\item{numScampIter}{The number of SCAMP iterations run at the discovery stage. Set to 1 by default.}

\item{nameOccuranceNum}{The number of times a name has to appear in distinct SCAMP clusterings to be
gated out.}

\item{drawAnnotationHistograms}{Boolean. Set to 1 to draw the annotation boundary locations for selected markers
for all samples and all markers. Set to 0 to forego the plotting.}

\item{supervisedList}{A list of lists.
The names of list entries correspond to marker names in the active channels vector.
Channels named in this list will have their gate locations modified. See Details.}

\item{annotationsApproved}{Boolean value. FALSE by default to encourage the
user to review the proposed annotation boundaries. When set to TRUE, indicates the user
wants to use the proposed annotation boundaries to cluster and gate the experiment.
If you want to run the FAUST method totally unsupervised, set this parameter to true
before running the method.}

\item{densitySubSampleThreshold}{Integer value.
Sets the number of cells needed in a clustering collection to sub-sample for density estimation.
NOTE: sub-sampling only occurs for density estimation. The dip test is computed on all cells
in the clustering collection. Gating at the end of the pipeline}

\item{densitySubSampleSize}{Integer value.
The number of cells to sub-sample from a clustering collection for density estimation.
NOTE: sub-sampling only occurs for density estimation. The dip test is computed on all cells
in the clustering collection. Gating at the end of the pipeline}

\item{densitySubSampleIterations}{Integer value.
The number of distinct sub-sampled density estimates to compute. The final gate location is the median
across the sub-sampled densities.
NOTE: sub-sampling only occurs for density estimation. The dip test is computed on all cells
in the clustering collection. Gating at the end of the pipeline}

\item{archDescriptionList}{list containing slot "targetArch".
Default "singleCPU" indicates FAUST will run on a single processor.
Set "targetArch" slot to "slurmCluster" to dispatch jobs across a cluster managed by slurm.
When "tagertArch" is set to "slurmCluster", several other slots must be set by the user.
maxNodeNum: the maximum number of nodes you wish to request on the slurm cluster.
maxTime: the total amount of time you want to run FAUST for. When exceeded, the job terminates.
sbatchFlags: a character string containing the flags to pass to sbatch.
nodeThreadNum: number of threads requested on each node.}
}
\value{
The FAUST pipeline returns a null value on completion. The main output is the file
"projectPath/faustData/faustCountMatrix.rds". The rownames are \code{sampleNames(gatingSet)]}
and the column names are the cell populations discovered by the pipeline. Note that the
special cell population "0_0_0_0_0" counts unclassified cells in the experiment.
}
\description{
This function discovers and annotated cell subsets in experimental cytometry data stored in a gating set.
}
\examples{

library(BiocManager)
BiocManager::install("flowWorkspaceData")
\dontrun{
faust(gatingSetPath=clusterMatrix,
                         numIter=1,
                         projectPath=tempdir())
table(scampClustering$RunOffVote)
table(scampClustering$MaxVote)
}
}
\author{
Evan Greene \href{mailto:egreene@fredhutch.org}{egreene@fredhutch.org}
}
